{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuliia_slipchuk\\\\Desktop\\\\ReactSmallApps\\\\router\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventsList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch details for selected event\"\n    }), {\n      status: 500\n    });\n  }\n  const responseData = await response.json();\n  return responseData.events;\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //return { isError: true, message: \"Could not fetch events\" };\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events\"\n    }), {\n      status: 500\n    });\n  } else {\n    const responseData = await response.json();\n    return responseData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {}\nexport async function action({\n  request,\n  params\n}) {\n  const response = await fetch(\"http://localhost:8080/events/\" + params.id, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not delete event\"\n    }), {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["redirect","useRouteLoaderData","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvent","id","response","fetch","ok","Response","JSON","stringify","message","status","responseData","json","events","loadEvents","loader","request","params","action","method","$RefreshReg$"],"sources":["C:/Users/yuliia_slipchuk/Desktop/ReactSmallApps/router/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { redirect, useRouteLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nexport default function EventDetailPage() {\r\n  const data = useRouteLoaderData(\"event-detail\");\r\n\r\n  return (\r\n    <>\r\n      <EventItem event={data.event} />\r\n      <EventsList />\r\n    </>\r\n  );\r\n}\r\n\r\nasync function loadEvent(id) {\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw new Response(\r\n      JSON.stringify({ message: \"Could not fetch details for selected event\" }),\r\n      { status: 500 }\r\n    );\r\n  }\r\n\r\n  const responseData = await response.json();\r\n  return responseData.events;\r\n}\r\n\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    //return { isError: true, message: \"Could not fetch events\" };\r\n    throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\r\n      status: 500,\r\n    });\r\n  } else {\r\n    const responseData = await response.json();\r\n    return responseData.events;\r\n  }\r\n}\r\n\r\nexport async function loader({ request, params }) {}\r\n\r\nexport async function action({ request, params }) {\r\n  const response = await fetch(\"http://localhost:8080/events/\" + params.id, {\r\n    method: request.method,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: \"Could not delete event\" }), {\r\n      status: 500,\r\n    });\r\n  }\r\n\r\n  return redirect(\"/events\");\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC/D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAMC,IAAI,GAAGT,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACH,SAAS;MAACU,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCX,OAAA,CAACF,UAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACd,CAAC;AAEP;AAACP,EAAA,CATuBD,eAAe;EAAA,QACxBP,kBAAkB;AAAA;AAAAgB,EAAA,GADTT,eAAe;AAWvC,eAAeU,SAASA,CAACC,EAAE,EAAE;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA6C,CAAC,CAAC,EACzE;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH;EAEA,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC1C,OAAOD,YAAY,CAACE,MAAM;AAC5B;AAEA,eAAeC,UAAUA,CAAA,EAAG;EAC1B,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE;MACxEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY,CAACE,MAAM;EAC5B;AACF;AAEA,OAAO,eAAeE,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE,CAAC;AAEnD,OAAO,eAAeC,MAAMA,CAAC;EAAEF,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGa,MAAM,CAACf,EAAE,EAAE;IACxEiB,MAAM,EAAEH,OAAO,CAACG;EAClB,CAAC,CAAC;EAEF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE;MACxEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EAEA,OAAO3B,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAiB,EAAA;AAAAoB,YAAA,CAAApB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}